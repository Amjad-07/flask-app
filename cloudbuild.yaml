options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _REGION: us-central1
  _ZONE: us-central1-c
  _REPO: my-repo
  _IMAGE: flask-app
  _PROJECT_ID: genuine-flight-462611-t5
  _MIG_NAME: my-mig
  _INSTANCE_TEMPLATE_NAME: instance-template-${BUILD_ID}

  _STARTUP_SCRIPT: |
    #!/bin/bash
    apt update
    apt install -y docker.io
    systemctl start docker
    systemctl enable docker
    gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
    docker pull us-central1-docker.pkg.dev/genuine-flight-462611-t5/my-repo/flask-app:latest
    docker stop flask-app || true
    docker rm flask-app || true
    docker run -d --name flask-app -p 8080:8080 us-central1-docker.pkg.dev/genuine-flight-462611-t5/my-repo/flask-app:latest

steps:
# Step 1: Build Docker image
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'build',
      '-t',
      'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_IMAGE}:latest',
      '.'
    ]

# Step 2: Push Docker image
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'push',
      'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_IMAGE}:latest'
    ]

# Step 3: Ensure firewall allows port 8080
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    [
      'compute', 'firewall-rules', 'create', 'allow-8080',
      '--allow=tcp:8080',
      '--target-tags=http-server',
      '--description=Allow port 8080',
      '--network=default'
    ]
  # Avoid failure if rule already exists
  ignoreExitStatus: true

# Step 4: Create a new instance template
- name: 'gcr.io/cloud-builders/gcloud'
  id: create-instance-template
  args:
    [
      'compute', 'instance-templates', 'create', '${_INSTANCE_TEMPLATE_NAME}',
      '--machine-type=e2-medium',
      '--region=${_REGION}',
      '--network=default',
      '--tags=http-server',
      '--metadata=startup-script=${_STARTUP_SCRIPT}',
      '--image-family=debian-11',
      '--image-project=debian-cloud'
    ]

# Step 5: Trigger rolling update in MIG
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    [
      'compute', 'instance-groups', 'managed', 'rolling-action', 'start-update', '${_MIG_NAME}',
      '--zone=${_ZONE}',
      '--version=template=${_INSTANCE_TEMPLATE_NAME}',
      '--max-unavailable=1',
      '--max-surge=1'
    ]
