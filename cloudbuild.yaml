options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/genuine-flight-462611-t5/my-repo/flask-app:latest'
      - '.'

  # Step 2: Push Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/genuine-flight-462611-t5/my-repo/flask-app:latest'

  # Step 3: Create new instance template with inline startup script
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - |
        TIMESTAMP=$(date +%s)
        TEMPLATE_NAME="instance-template-${TIMESTAMP}"

        gcloud compute instance-templates create "$TEMPLATE_NAME" \
          --machine-type=e2-medium \
          --image-family=debian-11 \
          --image-project=debian-cloud \
          --boot-disk-size=10GB \
          --boot-disk-type=pd-balanced \
          --tags=http-server \
          --metadata=startup-script='#!/bin/bash
apt update
apt install -y docker.io
systemctl start docker
systemctl enable docker
gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
docker pull us-central1-docker.pkg.dev/genuine-flight-462611-t5/my-repo/flask-app:latest
docker stop flask-app || true
docker rm flask-app || true
docker run -d --name flask-app -p 8080:8080 us-central1-docker.pkg.dev/genuine-flight-462611-t5/my-repo/flask-app:latest' \
        && echo "$TEMPLATE_NAME" > /workspace/template-name.txt

  # Step 4: Rolling update MIG
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - |
        TEMPLATE_NAME=$(cat /workspace/template-name.txt)
        gcloud compute instance-groups managed rolling-action start-update my-mig \
          --version=template=https://www.googleapis.com/compute/v1/projects/genuine-flight-462611-t5/global/instanceTemplates/$TEMPLATE_NAME \
          --zone=us-central1-c
